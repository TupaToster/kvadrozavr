.TH "4k_mg.cpp" 3 "Fri Aug 26 2022" "Version 1.22.8(133.7)" "S.A.W.P." \" -*- nroff -*-
.ad l
.nh
.SH NAME
4k_mg.cpp \- Contains all functions' bodies\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'snus\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBcomp_doubles\fP (double a, double b)"
.br
.RI "Compares two double variables\&. "
.ti -1c
.RI "enum \fBerr_input\fP \fBinput\fP (double *a, double *b, double *c)"
.br
.RI "Takes input from user\&. "
.ti -1c
.RI "enum \fBroots_amount\fP \fBsolve_equation\fP (double a, double b, double c, double *x1, double *x2)"
.br
.RI "Chooses a method of solution\&. "
.ti -1c
.RI "enum \fBroots_amount\fP \fBsolve_linear_case\fP (double b, double c, double *x1)"
.br
.RI "Solves a linear equation\&. "
.ti -1c
.RI "enum \fBroots_amount\fP \fBsolve_square_case\fP (double a, double b, double c, double *x1, double *x2)"
.br
.RI "Solves a quadratic equation\&. "
.ti -1c
.RI "void \fBoutput\fP (enum \fBroots_amount\fP root_am, double *x1, double *x2)"
.br
.RI "Creates output\&. "
.ti -1c
.RI "void \fBunit_test\fP ()"
.br
.RI "Tests correctness of work of key functions\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains all functions' bodies\&. 

A \&.cpp file that contains bodies of all functions declared in 'snus\&.h' 
.PP
Definition in file \fB4k_mg\&.cpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "bool comp_doubles (double a, double b)"

.PP
Compares two double variables\&. 
.PP
\fBParameters\fP
.RS 4
\fIa,b\fP - two numbers for comparison 
.RE
.PP
\fBReturns\fP
.RS 4
true - if |a - b| is less then EPS 
.PP
false - if |a - b| is more then EPS
.RE
.PP
This function is used to compare two double type variables with a precision of EPS 
.PP
Definition at line 12 of file 4k_mg\&.cpp\&.
.SS "enum \fBerr_input\fP input (double * a, double * b, double * c)"

.PP
Takes input from user\&. 
.PP
\fBParameters\fP
.RS 4
\fIa,b,c\fP - pointers to variables that will contain coefficients of\\ an equation of type: a * x^2 + b * x + c = 0
.RE
.PP
This function is used to take input of coefficients of an equation\&. 
.PP
Definition at line 12 of file 4k_mg\&.cpp\&.
.SS "void output (enum \fBroots_amount\fP root_am, double * x1, double * x2)"

.PP
Creates output\&. 
.PP
\fBParameters\fP
.RS 4
\fIroot_am\fP - a roots_amount that specifies an amount of roots 
.br
\fIx1,x2\fP pointers to roots that have been found
.RE
.PP
This function is used to generate output based on amount of roots (specified by root_am) and to print them 
.PP
Definition at line 90 of file 4k_mg\&.cpp\&.
.SS "enum \fBroots_amount\fP solve_equation (double a, double b, double c, double * x1, double * x2)"

.PP
Chooses a method of solution\&. 
.PP
\fBParameters\fP
.RS 4
\fIa,b,c\fP - coefficients of a quadratic equation of type: a * x^2 + b * x + c = 0 
.br
\fIx1,x2\fP - pointers to variables that will contain found roots 
.RE
.PP
\fBReturns\fP
.RS 4
roots_amount type constant that specifies amount of roots found
.RE
.PP
This function is used to choose a calculation method depending on 'a' parameter\&. If 'a' is equal to 0 than equation is linear and solvelin function is used In other cases a solvesq function is used 
.PP
Definition at line 12 of file 4k_mg\&.cpp\&.
.SS "enum \fBroots_amount\fP solve_linear_case (double b, double c, double * x1)"

.PP
Solves a linear equation\&. 
.PP
\fBParameters\fP
.RS 4
\fIb,c\fP - coefficients of a linear function of type: b * x + c = 0 
.br
\fIx1\fP - pointer to a variable that will contain a found root 
.RE
.PP
\fBReturns\fP
.RS 4
roots_amount type constant that specifies amount of roots found
.RE
.PP
This function is used to find all real roots of a linear equation and specify the amount of roots found 
.PP
Definition at line 12 of file 4k_mg\&.cpp\&.
.SS "enum \fBroots_amount\fP solve_square_case (double a, double b, double c, double * x1, double * x2)"

.PP
Solves a quadratic equation\&. 
.PP
\fBParameters\fP
.RS 4
\fIa,b,c\fP - coefficients of a quadratic equation of type: a * x^2 + b * x + c = 0 
.br
\fIx1,x2\fP - pointers to variables that will contain found roots 
.RE
.PP
\fBReturns\fP
.RS 4
roots_amount type constant that specifies amount of roots found 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIThis\fP function does not operate with 'a' equal to zero 
.br
\fI(this\fP issue is solved in solve_equation function)
.RE
.PP
This function is used to find all real roots of a quadratic equation and specify the amount of roots found 
.PP
Definition at line 12 of file 4k_mg\&.cpp\&.
.SS "void unit_test ()"

.PP
Tests correctness of work of key functions\&. This function is used to detect mistakes in functions solve_equation, solve_linear_case, solve_square_case and comp_doubles 
.PP
Definition at line 122 of file 4k_mg\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for S\&.A\&.W\&.P\&. from the source code\&.
